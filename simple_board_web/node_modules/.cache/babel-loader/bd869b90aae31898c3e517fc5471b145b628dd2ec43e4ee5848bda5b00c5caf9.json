{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\uni42\\\\OneDrive\\\\\\uBB38\\uC11C\\\\GitHub\\\\simpleBoardWeb\\\\simple_board_web\\\\src\\\\page\\\\BoardPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function BoardPage() {\n  _s();\n  const [post, setPost] = useState({});\n  const {\n    id\n  } = useParams(); // URL에서 id를 가져옴\n  const navigate = useNavigate();\n  useEffect(() => {\n    // 서버에서 글의 상세 정보를 가져오는 함수\n    const fetchPost = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8080/view/${id}`);\n        setPost(response.data);\n      } catch (error) {\n        console.error('글을 불러오는 데 실패했습니다.', error);\n      }\n    };\n    fetchPost();\n  }, []);\n\n  // 글 삭제 함수\n  const deletePost = async () => {\n    try {\n      await axios.delete(`https://localhost:8080/view/${id}`);\n      navigate(\"/\");\n    } catch (error) {\n      console.error('글을 삭제하는 데 실패했습니다.', error);\n    }\n  };\n\n  // 글 수정 페이지로 이동하는 함수\n  const editPost = () => {\n    history.push(`/edit-post/${id}`);\n    navigate(`\"/${id}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\uAE00\\uC4F4\\uC774: \", post.author]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\uC791\\uC131\\uC2DC\\uAC04: \", post.createdAt]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\uB0B4\\uC6A9: \", post.content]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: deletePost,\n      children: \"\\uAE00 \\uC0AD\\uC81C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: `/board/${boardId}`,\n        children: \"\\uAE00 \\uC0AD\\uC81C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)\n    }, boardId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: editPost,\n      children: \"\\uAE00 \\uC218\\uC815\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(BoardPage, \"UGdUC3arsmqeEUbcMqrKtB5AOoc=\", true, function () {\n  return [useNavigate];\n});\n_c = BoardPage;\n;\nvar _c;\n$RefreshReg$(_c, \"BoardPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","BoardPage","_s","post","setPost","id","useParams","navigate","fetchPost","response","get","data","error","console","deletePost","delete","editPost","history","push","children","title","fileName","_jsxFileName","lineNumber","columnNumber","author","createdAt","content","onClick","Link","to","boardId","_c","$RefreshReg$"],"sources":["C:/Users/uni42/OneDrive/문서/GitHub/simpleBoardWeb/simple_board_web/src/page/BoardPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport function BoardPage() {\r\n  const [post, setPost] = useState({});\r\n  const { id } = useParams(); // URL에서 id를 가져옴\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(()=>{\r\n    // 서버에서 글의 상세 정보를 가져오는 함수\r\n    const fetchPost = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:8080/view/${id}`);\r\n        setPost(response.data);\r\n      } catch (error) {\r\n        console.error('글을 불러오는 데 실패했습니다.', error);\r\n      }\r\n    };\r\n\r\n    fetchPost();\r\n  }, []);\r\n\r\n  // 글 삭제 함수\r\n  const deletePost = async () => {\r\n    try {\r\n      await axios.delete(`https://localhost:8080/view/${id}`);\r\n      navigate(\"/\");\r\n    } catch (error) {\r\n      console.error('글을 삭제하는 데 실패했습니다.', error);\r\n    }\r\n  };\r\n\r\n  // 글 수정 페이지로 이동하는 함수\r\n  const editPost = () => {\r\n    history.push(`/edit-post/${id}`);\r\n    navigate(`\"/${id}`);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>{post.title}</h2>\r\n      <p>글쓴이: {post.author}</p>\r\n      <p>작성시간: {post.createdAt}</p>\r\n      <p>내용: {post.content}</p>\r\n      <button onClick={deletePost}>글 삭제</button>\r\n      <div key={boardId}>\r\n            <Link to={`/board/${boardId}`}>글 삭제</Link>\r\n        </div>\r\n      <button onClick={editPost}>글 수정</button>\r\n    </div>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}